/*
 * GET edit page.
 */
var path = require('path');
var logger = require('log4js').getLogger("studio-edit");

// GET /edit
exports.edit = function * (synchroStudio, appName, req, res) // Generator
{
    var apiProcessor = synchroStudio.getApiProcessor(appName);
    var moduleStore = yield synchroStudio.getAppModuleStoreForPathAwaitable(appName);
    if (!moduleStore)
    {
        res.status(404).send('Module "' + appName + '" not found');
        return;
    }

    var page = null;
    var code = "";
    if (req.query["page"])
    {
        page = req.query["page"];
    }

    if (page)
    {
        code = yield moduleStore.getModuleSourceAwaitable(page);
        if (code && Buffer.isBuffer(code))
        {
            code = code.toString();
        }
    }

    var files = yield moduleStore.listModulesAwaitable();
    var debugPort = apiProcessor.debugPort;
    var modulePathPrefix = synchroStudio.config.get('APP_ROOT_PATH') + "/" + apiProcessor.appContainer + "/";

    var loggedInUser = req.session.user_id;

    synchroStudio.render('sandbox', { 
        title: 'Synchro', 
        modulePathPrefix: modulePathPrefix, 
        code: code, 
        page: page, 
        files: files, 
        debugPort: debugPort, 
        loggedInUser: loggedInUser
    }, res);
};

// GET /module
exports.loadModule = function * (synchroStudio, appName, req, res) // Generator
{
    var moduleStore = yield synchroStudio.getAppModuleStoreForPathAwaitable(appName);
    var moduleName = req.query["module"];

    logger.info("Load module: " + moduleName);
    var result = { };

    if (moduleName)
    {
        result.status = "OK";
        result.message = "Module source found";
        result.source = yield moduleStore.getModuleSourceAwaitable(moduleName);
        if (result.source && Buffer.isBuffer(result.source))
        {
            result.source = result.source.toString();
        }
    }
    else
    {
        result.status = "Fail";
        result.message = "No module specified";
    }
    res.send(result);
};

// POST /module
exports.saveModule = function * (synchroStudio, appName, req, res) // Generator
{
    var apiProcessor = synchroStudio.getApiProcessor(appName);
    var moduleStore = yield synchroStudio.getAppModuleStoreForPathAwaitable(appName);

    logger.info("Save module");
    var result = { };

    if (req.body["module"] && req.body["source"])
    {
        var moduleName = req.body["module"];
        var source = req.body["source"];

        logger.info("Putting module source");
        var putResult = yield moduleStore.putModuleSourceAwaitable(moduleName, source);

        logger.info("Reloading module");
        var reloadResult = yield apiProcessor.reloadModuleAwaitable(moduleName);
        logger.info("Done reloading module, result:", result);
        if (reloadResult["error"]) 
        {
            result.status = "Fail";
            result.message = "Unable to deploy module, reason: " + reloadResult["error"];
        }
        else
        {
            result.status = "OK";
            result.message = "Module updated and deployed";
        } 
    }
    else
    {
        result.status = "Fail";
        result.message = "Module source not saved";
    }

    res.send(result);
};