// SynchroWebClient server
//
var log4js = require('log4js');
var path = require('path');
var express = require('express');
var hbs = require('express-hbs');

var render = hbs.create().express3({
    contentHelperName: 'content'
});

var logger;

// You must either call this with a valid config object, or with a fully-specified apiPath.  If you don't pass
// a config object (that is a Synchro API config object instance) or a fully-specified apiPath, then the resolution
// of the apiPath is going to fail.
//
var SynchroWeb = function(config, basePath, apiPath)
{
    this.config = config;
    this.basePath = basePath; // Where this service is served (not including trailing slash)
    this.apiPath = apiPath;   // Where apps are served (not including trailing slash)

    // synchro-web has its own dependency on log4js, since it can run standalone (and thus can't depend on the 
    // containing project log4js).  Because of this, there are situations where Synchro and synchro-web each
    // have different instances of log4js with different state (even if they're the same version of log4js).  To
    // deal with this, we propogate the main config to our log4js config (in the event that it's the same instance
    // of log4js, this shouldn't hurt).
    //
    if (config.get) // Called from Synchro...
    {
        log4js.configure(config.get('LOG4JS_CONFIG'));
    }
    logger = log4js.getLogger("synchro-web-client");
};

// Called before the Express router or any routes are added to the app.  This is a good time to add any
// static middleware.
//
SynchroWeb.prototype.addMiddleware = function(expressApp)
{
    // We need this to serve synchro.css, bundle.js (the main script bundle), and possibly other resources later.
    //
    logger.debug("Adding static path from basePath: " + this.basePath);
    logger.debug("Static path is: " + path.join(__dirname, 'public'));
    expressApp.use(this.basePath, express.static(path.join(__dirname, 'public'), { maxAge: this.config.get('STATIC_CACHE_MAXAGE') }));
}

SynchroWeb.prototype.addRoutes = function(expressApp, config)
{
    var self = this;
    expressApp.get(this.basePath + '/:appName', function(req,res)
    {
        var locals = { };
        locals.apiPath = self.apiPath + '/' + req.params.appName;
        locals.settings = { views: path.join(__dirname, '/views') };

        logger.debug("Locals:", JSON.stringify(locals, null, 4)); // !!!

        render(locals.settings.views + '/index.hbs', locals, function(err, html) 
        {
            if (err)
            {
                logger.error("Error:", err);
            }
            else
            {
                res.send(html);
            }
        });
    });
}

module.exports = SynchroWeb
