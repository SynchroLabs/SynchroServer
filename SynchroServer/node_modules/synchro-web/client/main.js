var log4js = require('log4js');
log4js.configure(
    { 
        // Redirect console.log to log4js, turn off color coding
        appenders:
        [ 
            { type: "console", layout: { type: "basic" } } 
        ],
        replaceConsole: true,
        levels: 
        {
            '[all]': 'INFO'
        }
    });

var logger = require('log4js').getLogger("main");

logger.info("Client script is running");

logger.info("Found endpoint:", endpoint);

var SynchroApp = require('./core/synchro-app');
var DeviceMetrics = require('./core/device-metrics');
var StateManager = require('./core/state-manager');
var SynchroApp = require('./core/synchro-app');
var Transport = require('./core/transport');
var WebPageView = require('./core/web-page-view');

var deviceMetrics = new DeviceMetrics();

var appManager = null; // !!! ?
var app = new SynchroApp(endpoint, { name: 'test', description: 'Test app'});
var transport = new Transport(endpoint);

var stateManager = new StateManager(appManager, app, transport, deviceMetrics);

var page = document;
var containerControl = document.getElementById('synchro_container');
var backToMenu = null;

var pageView = new WebPageView(stateManager, stateManager.getViewModel(), page, containerControl, backToMenu);

var backButton = document.getElementById('synchro_back');
if (backButton)
{
    backButton.addEventListener("click", function(){ pageView.goBack() }, false);
}

pageView.setOnPageTitleCallback(function(title)
{
    logger.info("Page title set:", title);
    document.getElementById('synchro_title').innerHTML = title;
});

pageView.setOnBackEnabledCallback(function(isEnabled)
{
    logger.info("Back enabled:", isEnabled);
    if (backButton)
    {
        backButton.style.visibility = isEnabled ? "visible" : "hidden";
    }
});

stateManager.setProcessingHandlers(pageView.processPageView.bind(pageView), pageView.processMessageBox.bind(pageView), pageView.processLaunchUrl.bind(pageView));
stateManager.startApplicationAsync();
