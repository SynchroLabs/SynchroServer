var Cookies = require('cookies-js');
var logger = require('log4js').getLogger("synchro-app");

// The AppDefinition is provided by the Synchro server (it is the contents of the synchro.json file in the Synchro app directory).
// This is a JSON object that is modeled more or less after the NPM package structure.  For now we store it in the
// SynchroApp as the JSON object that it is and just provide getters for some well-known members.  Once the AppDefinition
// gets nailed down, we might do more processing of it here (or we might not).
//

// We're going to serialize the sessionId to a client cookie (so that the session will persist across browser pages/sessions, 
// including page refresh).
//
var sessionIdCookieName = "synchro-session-id";

var SynchroApp = function(endpoint, appDefinition, sessionId)
{
    this.endpoint = endpoint;
    this.appDefinition = appDefinition;
    if (sessionId)
    {
        this.sessionId = sessionId;
        Cookies.set(sessionIdCookieName, this.sessionId, { expires: Infinity });
    }
    else
    {
        this.sessionId = Cookies.get(sessionIdCookieName);
    }
}

SynchroApp.prototype.getEndpoint = function()
{
    return this.endpoint;
}

SynchroApp.prototype.getName = function()
{
    return this.appDefinition.name;
}

SynchroApp.prototype.getDescription = function()
{
    return this.appDefinition.description;
}

SynchroApp.prototype.getAppDefinition = function()
{
    return this.appDefinition;
}

SynchroApp.prototype.getSessionId = function()
{
    return this.sessionId;
}

SynchroApp.prototype.setSessionId = function(sessionId)
{
    this.sessionId = sessionId;
    Cookies.set(sessionIdCookieName, this.sessionId, { expires: Infinity });
}

module.exports = SynchroApp;
