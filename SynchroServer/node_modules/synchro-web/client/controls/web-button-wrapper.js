var logger = require('log4js').getLogger("web-button-wrapper");

var WebControlWrapper = require('./web-control-wrapper');

var binding = require('../core/binding');
var CommandInstance = require('../core/command-instance');

var WebButtonWrapper = function(parent, bindingContext, controlSpec)
{
    var self = this;

    this.base = WebControlWrapper;
    this.base(parent, bindingContext, controlSpec);
    logger.debug("Button control created");

    var button = document.createElement("button");
    button.classList.add("synchro-button");

    this._control = button;

    var value = this.processElementProperty(controlSpec, "caption", function(value) 
    { 
        button.innerHTML = self.toString(value);
    });

    var value = this.processElementProperty(controlSpec, "resource", function(value) 
    {
        button.style.backgroundImage = "url('" + self.toString(value) + "')";
        button.style.backgroundSize = '100%';
    });

    var bindingSpec = binding.getCanonicalBindingSpec(controlSpec, CommandInstance.commandNames.OnClick, WebButtonWrapper.commands);

    this.processCommands(bindingSpec, WebButtonWrapper.commands);

    if (this.getCommand(CommandInstance.commandNames.OnClick) != null)
    {
        // Attach a handler
        logger.debug("Adding button click handler");
        button.addEventListener("click", this.OnClick.bind(this), false);
    }
}
WebButtonWrapper.prototype = Object.create(WebControlWrapper.prototype);

WebButtonWrapper.commands = [ CommandInstance.commandNames.OnClick ];

WebButtonWrapper.prototype.OnClick = function()
{
    logger.info("Button clicked:", this._control.innerHTML);
    var command = this.getCommand(CommandInstance.commandNames.OnClick);
    if (command != null)
    {
        logger.info("Button click with command: %s", command.getCommand());
        this._stateManager.sendCommandRequestAsync(command.getCommand(), command.getResolvedParameters(this._bindingContext));
    }
}

module.exports = WebButtonWrapper;
