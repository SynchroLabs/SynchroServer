var logger = require('log4js').getLogger("web-progress-bar-wrapper");

var WebControlWrapper = require('./web-control-wrapper');

var binding = require('../core/binding');
var CommandInstance = require('../core/command-instance');

var WebProgressBarWrapper = function(parent, bindingContext, controlSpec)
{
    this.base = WebControlWrapper;
    this.base(parent, bindingContext, controlSpec);
    logger.info("ProgressBar control created");

    var progressBar = document.createElement("progress");
    progressBar.classList.add("synchro-progressbar");

    this._control = progressBar;

    var self = this;

    var bindingSpec = binding.getCanonicalBindingSpec(controlSpec, "value");

    if (!this.processElementBoundValue("value", bindingSpec["value"], function() { return new JToken(progressBar.value) }, function(value) { progressBar.value = self.toDouble(value) }))
    {
        this.processElementProperty(controlSpec, "value", function(value) { progressBar.value = self.toDouble(value) });
    }

    // !!! Need to support min even though control doesn't support it
    // this.processElementProperty(controlSpec, "minimum", function(value) { self.toDouble(value)} );
    this.processElementProperty(controlSpec, "maximum", function(value) { progressBar.max = self.toDouble(value) });
}
WebProgressBarWrapper.prototype = Object.create(WebControlWrapper.prototype);

module.exports = WebProgressBarWrapper;
