var logger = require('log4js').getLogger("web-text-wrapper");

var WebControlWrapper = require('./web-control-wrapper');

var binding = require('../core/binding');
var CommandInstance = require('../core/command-instance');

var WebTextWrapper = function(parent, bindingContext, controlSpec)
{
    var self = this;

    this.base = WebControlWrapper;
    this.base(parent, bindingContext, controlSpec);
    logger.debug("Text control created");

    var text = document.createElement("p");
    text.classList.add("synchro-text");

    this._control = text;

    var value = this.processElementProperty(controlSpec, "value", function(value) 
    { 
        text.innerHTML = self.toString(value) || "&nbsp;"; // Empty <p> tags are not legal, and mess up formatting
    });

    this.processElementProperty(controlSpec, "ellipsize", function(value)
    {
        if (self.toBoolean(value))
        {
            self._control.style.whiteSpace = "nowrap";
            self._control.style.overflow = "hidden";
            self._control.style.textOverflow = "ellipsis";
        }
        else
        {
            self._control.style.whiteSpace = "initial";
            self._control.style.overflow = "initial";
            self._control.style.textOverflow = "initial";
        }
    });

    this.processElementProperty(controlSpec, "textAlignment", function(value)
    {
        var alignString = self.toString(value);
        if (alignString == "Left")
        {
            self._control.style.textAlign = "left";
        }
        if (alignString == "Center")
        {
            self._control.style.textAlign = "center";
        }
        else if (alignString == "Right")
        {
            self._control.style.textAlign = "right";
        }
    });
}
WebTextWrapper.prototype = Object.create(WebControlWrapper.prototype);

module.exports = WebTextWrapper;
