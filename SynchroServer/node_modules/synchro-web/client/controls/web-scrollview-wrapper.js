var logger = require('log4js').getLogger("web-scrollview-wrapper");

var WebControlWrapper = require('./web-control-wrapper');
var Orientation = require('../core/control-wrapper').Orientation;

var binding = require('../core/binding');
var CommandInstance = require('../core/command-instance');

var WebScrollViewWrapper = function(parent, bindingContext, controlSpec)
{
    var self = this;

    this.base = WebControlWrapper;
    this.base(parent, bindingContext, controlSpec);
    logger.info("ScrollView control created");

    this._control = document.createElement("div");
    this._control.classList.add("synchro-scrollview");
    this._control.style.display = "inline-block";
    this._control.style.overflow = "auto";

    // At least for now, we're not using this (see orientation comment below).
    //
    this.processElementProperty(controlSpec, "orientation", function(value) { this._orientation = self.toOrientation(value, Orientation.Vertical) });

    if (controlSpec["contents"] != null)
    {
        this.createControls(controlSpec["contents"], function(childControlSpec, childControlWrapper)
        {
            logger.info("Created child control");

            // WebControlWrapper already sets the height/width to 100% on star sizing, so the logic below
            // (from other platforms) is not needed here.
            //
            if (this._orientation == Orientation.Vertical)
            {
                // If child width is fill parent (*), set child width to parent width (width: 100% in html) 
            }
            else
            {
                // If child height is fill parent (*), set child height to parent height (height: 100% in html)
            }
            self._control.appendChild(childControlWrapper._control);
        });
    }
}

WebScrollViewWrapper.prototype = Object.create(WebControlWrapper.prototype);

module.exports = WebScrollViewWrapper;
