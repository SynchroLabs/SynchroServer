var logger = require('log4js').getLogger("web-slider-wrapper");

var WebControlWrapper = require('./web-control-wrapper');

var binding = require('../core/binding');
var JToken = require('../core/json');

var WebSliderWrapper = function(parent, bindingContext, controlSpec)
{
    var self = this;

    this.base = WebControlWrapper;
    this.base(parent, bindingContext, controlSpec);
    logger.info("Edit control created");

    var slider = document.createElement("input");
    slider.classList.add("synchro-slider");
    slider.type = "range";

    this._control = slider;

    var bindingSpec = binding.getCanonicalBindingSpec(controlSpec, "value");
    if (!this.processElementBoundValue("value", bindingSpec["value"], function() { return new JToken(slider.value) }, function(value) { slider.value = self.toDouble(value) }))
    {
        this.processElementProperty(controlSpec, "value", function(value) { slider.value = self.toDouble(value) });
    }

    this.processElementProperty(controlSpec, "minimum", function(value) { slider.min = self.toDouble(value) });
    this.processElementProperty(controlSpec, "maximum", function(value) { slider.max = self.toDouble(value) });

    slider.addEventListener("input", this.SliderChanged.bind(this), false);
    slider.addEventListener("change", this.SliderChanged.bind(this), false);
}
WebSliderWrapper.prototype = Object.create(WebControlWrapper.prototype);

WebSliderWrapper.prototype.SliderChanged = function()
{
    this.updateValueBindingForAttribute("value");
}

module.exports = WebSliderWrapper;