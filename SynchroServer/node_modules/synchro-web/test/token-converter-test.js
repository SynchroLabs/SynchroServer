require('./test');

var assert = require("assert")
require("./assert-helper");

var TokenConverter = require('../client/core/token-converter');
var JToken = require('../client/core/json');

describe("Token Converter", function () 
{
    it("should convert to string", function()
    {
        var objVal = new JToken({"foo": "bar", "baz": "fraz"});
        var arrayVal = new JToken(["foo", "bar"]);
        var stringVal = new JToken("foo");
        var intVal = new JToken(13);
        var floatVal = new JToken(13.69);
        var boolVal = new JToken(true);
    
        assert.equal("", TokenConverter.toString(objVal));
        assert.equal("2", TokenConverter.toString(arrayVal));
        assert.equal("foo", TokenConverter.toString(stringVal));
        assert.equal("13", TokenConverter.toString(intVal));
        assert.equal("13.69", TokenConverter.toString(floatVal));
        assert.equal("true", TokenConverter.toString(boolVal));
    });

    it("should convert to boolean", function()
    {
        var objVal = new JToken({"foo": "bar", "baz": "fraz"});
        var objValEmpty = new JToken({});
        var arrayVal = new JToken(["foo", "bar"]);
        var arrayValEmpty = new JToken([]);
        var stringVal = new JToken("foo");
        var stringValEmpty = new JToken("");
        var intVal = new JToken(13);
        var intValZero = new JToken(0);
        var floatVal = new JToken(13.69);
        var floatValZero = new JToken(0.0);
        var boolValTrue = new JToken(true);
        var boolValFalse = new JToken(false);
    
        assert.equal(true, TokenConverter.toBoolean(objVal));
        assert.equal(true, TokenConverter.toBoolean(objValEmpty));
        assert.equal(true, TokenConverter.toBoolean(arrayVal));
        assert.equal(false, TokenConverter.toBoolean(arrayValEmpty));
        assert.equal(true, TokenConverter.toBoolean(stringVal));
        assert.equal(false, TokenConverter.toBoolean(stringValEmpty));
        assert.equal(true, TokenConverter.toBoolean(intVal));
        assert.equal(false, TokenConverter.toBoolean(intValZero));
        assert.equal(true, TokenConverter.toBoolean(floatVal));
        assert.equal(false, TokenConverter.toBoolean(floatValZero));
        assert.equal(true, TokenConverter.toBoolean(boolValTrue));
        assert.equal(false, TokenConverter.toBoolean(boolValFalse));
    });

    it("should convert to double", function()
    {
        var arrayVal = new JToken(["foo", "bar"]);
        var arrayValEmpty = new JToken([]);
        var stringVal = new JToken("12.34");
        var stringNotNum = new JToken("threeve");
        var intVal = new JToken(13);
        var floatVal = new JToken(13.69);

        assert.equal(2, TokenConverter.toDouble(arrayVal));
        assert.equal(0, TokenConverter.toDouble(arrayValEmpty));
        assert.equal(12.34, TokenConverter.toDouble(stringVal));
        assert.equal(null, TokenConverter.toDouble(stringNotNum));
        assert.equal(13, TokenConverter.toDouble(intVal));
        assert.equal(13.69, TokenConverter.toDouble(floatVal));
    });
});
